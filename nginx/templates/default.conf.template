upstream backend_ro {
    server ${BACKEND_HOST}:${BACKEND_PORT} weight=2;
    server ${BACKEND_RO_HOST}:${BACKEND_RO_PORT};
}

map $request_method $backend_location {
   GET backend_ro;
   default ${BACKEND_HOST}:${BACKEND_PORT};
}

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=default_cache:10m max_size=2g;

server {
    listen ${PORT} default;

    resolver 127.0.0.11 valid=5s ipv6=off;

    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    proxy_ignore_headers Cache-Control;
    proxy_hide_header Cache-Control;

    proxy_cache_key $scheme$request_method$host$request_uri;
    proxy_cache default_cache;
    proxy_cache_methods GET;
    proxy_cache_min_uses 2;
    proxy_cache_valid 200 301 302 120m;
    proxy_cache_valid 404 1m;

    location / {
        root /var/www/frontend/static/;
        index index.html;
    }

    location /test {
        return 301 /;
    }

    location = /status {
        stub_status;
    }

    location /documentation {
        alias /var/www/docs/;
        try_files README.md =404;
    }

    location /api/v1/ {
        rewrite ^/api/v1/(.*)$ /$1 break;

        proxy_no_cache 1;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;

        proxy_pass http://$backend_location;
    }

    location /mirror1/api/v1/ {
        rewrite ^/mirror1/api/v1/(.*)$ /$1 break;

        proxy_no_cache 1;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;

        proxy_pass http://backend_ro;
    }

    location /admin/pg/ {
        proxy_set_header X-Script-Name /admin/pg;
        proxy_set_header Host $host;
        proxy_pass http://${PG_WEB_HOST}:${PG_WEB_PORT};
    }
}
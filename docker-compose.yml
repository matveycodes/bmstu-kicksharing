version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-pg_db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 3000
      TZ: ${TZ:-Europe/Moscow}
      DB: ${BACKEND_DB:-postgres}
    depends_on:
      pg_db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:1.25.2
    restart: unless-stopped
    environment:
      PORT: 80
      BACKEND_HOST: backend
      BACKEND_PORT: 3000
      PG_WEB_HOST: pg_web
      PG_WEB_PORT: 80
    depends_on:
      - backend
      - pg_web
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./README.md:/var/www/docs/README.md
      - ./frontend:/var/www/frontend
    ports:
      - "80:80"

  pg_db:
    image: postgis/postgis:15-3.3
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TZ: ${TZ}
      PGTZ: ${TZ}
    volumes:
      - ./pg_db/init/:/docker-entrypoint-initdb.d/
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s

  pg_web:
    image: dpage/pgadmin4:7.7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_WEB_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_WEB_PASSWORD}
    volumes:
      - ./pg_web/servers.json:/pgadmin4/servers.json
    depends_on:
      pg_db:
        condition: service_healthy

volumes:
  pg_data: